import{b1 as x,r as l,j as t,d as J,bm as K,e as Q,w as n,f as U,g as X,S as v,cf as A,cg as Z,ch as ee,ap as D,ci as ae,al as te,cj as oe,an as se,ck as re,cl as le,cm as ne,cn as h,co as ie,cp as ce,aW as y,B as de}from"./index-54a_Xl81.js";/**
 * @license @tabler/icons-react v3.33.0 - MIT
 *
 * This source code is licensed under the MIT license.
 * See the LICENSE file in the root directory of this source tree.
 */var pe=x("outline","loader","IconLoader",[["path",{d:"M12 6l0 -3",key:"svg-0"}],["path",{d:"M16.25 7.75l2.15 -2.15",key:"svg-1"}],["path",{d:"M18 12l3 0",key:"svg-2"}],["path",{d:"M16.25 16.25l2.15 2.15",key:"svg-3"}],["path",{d:"M12 18l0 3",key:"svg-4"}],["path",{d:"M7.75 16.25l-2.15 2.15",key:"svg-5"}],["path",{d:"M6 12l-3 0",key:"svg-6"}],["path",{d:"M7.75 7.75l-2.15 -2.15",key:"svg-7"}]]);/**
 * @license @tabler/icons-react v3.33.0 - MIT
 *
 * This source code is licensed under the MIT license.
 * See the LICENSE file in the root directory of this source tree.
 */var be=x("outline","trash","IconTrash",[["path",{d:"M4 7l16 0",key:"svg-0"}],["path",{d:"M10 11l0 6",key:"svg-1"}],["path",{d:"M14 11l0 6",key:"svg-2"}],["path",{d:"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12",key:"svg-3"}],["path",{d:"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3",key:"svg-4"}]]);function we(e=null){const[a,o]=l.useState(e);return[a,r=>o(i=>i===r?null:r)]}function Me({defaultValue:e,onValueChange:a,isPending:o,items:s,placeholder:r,disabled:i,className:p="",isControlled:m=!1}){const g=m?{value:e,onValueChange:a}:{defaultValue:e,onValueChange:a};return t.jsxs(J,{...g,children:[t.jsx(K,{children:t.jsx(Q,{disabled:i,className:n(p),children:t.jsx(U,{placeholder:r??"Select"})})}),t.jsx(X,{children:o?t.jsx(v,{disabled:!0,value:"loading",className:"h-14",children:t.jsxs("div",{className:"flex items-center justify-center gap-2",children:[t.jsx(pe,{className:"h-5 w-5 animate-spin"}),"  ","Loading..."]})}):s==null?void 0:s.map(({label:c,value:u})=>t.jsx(v,{value:u,children:c},u))})]})}var N="AlertDialog",[ge,Ee]=te(N,[A]),d=A(),j=e=>{const{__scopeAlertDialog:a,...o}=e,s=d(a);return t.jsx(Z,{...s,...o,modal:!0})};j.displayName=N;var ue="AlertDialogTrigger",fe=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...s}=e,r=d(o);return t.jsx(ce,{...r,...s,ref:a})});fe.displayName=ue;var me="AlertDialogPortal",S=e=>{const{__scopeAlertDialog:a,...o}=e,s=d(a);return t.jsx(ee,{...s,...o})};S.displayName=me;var ve="AlertDialogOverlay",C=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...s}=e,r=d(o);return t.jsx(ie,{...r,...s,ref:a})});C.displayName=ve;var f="AlertDialogContent",[xe,Ae]=ge(f),De=re("AlertDialogContent"),R=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,children:s,...r}=e,i=d(o),p=l.useRef(null),m=D(a,p),g=l.useRef(null);return t.jsx(ae,{contentName:f,titleName:_,docsSlug:"alert-dialog",children:t.jsx(xe,{scope:o,cancelRef:g,children:t.jsxs(oe,{role:"alertdialog",...i,...r,ref:m,onOpenAutoFocus:se(r.onOpenAutoFocus,c=>{var u;c.preventDefault(),(u=g.current)==null||u.focus({preventScroll:!0})}),onPointerDownOutside:c=>c.preventDefault(),onInteractOutside:c=>c.preventDefault(),children:[t.jsx(De,{children:s}),t.jsx(ye,{contentRef:p})]})})})});R.displayName=f;var _="AlertDialogTitle",b=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...s}=e,r=d(o);return t.jsx(le,{...r,...s,ref:a})});b.displayName=_;var w="AlertDialogDescription",M=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...s}=e,r=d(o);return t.jsx(ne,{...r,...s,ref:a})});M.displayName=w;var he="AlertDialogAction",E=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...s}=e,r=d(o);return t.jsx(h,{...r,...s,ref:a})});E.displayName=he;var T="AlertDialogCancel",O=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...s}=e,{cancelRef:r}=Ae(T,o),i=d(o),p=D(a,r);return t.jsx(h,{...i,...s,ref:p})});O.displayName=T;var ye=({contentRef:e})=>{const a=`\`${f}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${f}\` by passing a \`${w}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${f}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return l.useEffect(()=>{var s;document.getElementById((s=e.current)==null?void 0:s.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},Ne=j,je=S,P=C,k=R,I=E,$=O,L=b,F=M;const Se=Ne,Ce=je,z=l.forwardRef(({className:e,...a},o)=>t.jsx(P,{className:n("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:o}));z.displayName=P.displayName;const B=l.forwardRef(({className:e,...a},o)=>t.jsxs(Ce,{children:[t.jsx(z,{}),t.jsx(k,{ref:o,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));B.displayName=k.displayName;const G=({className:e,...a})=>t.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});G.displayName="AlertDialogHeader";const H=({className:e,...a})=>t.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});H.displayName="AlertDialogFooter";const W=l.forwardRef(({className:e,...a},o)=>t.jsx(L,{ref:o,className:n("text-lg font-semibold",e),...a}));W.displayName=L.displayName;const Y=l.forwardRef(({className:e,...a},o)=>t.jsx(F,{ref:o,className:n("text-sm text-muted-foreground",e),...a}));Y.displayName=F.displayName;const Re=l.forwardRef(({className:e,...a},o)=>t.jsx(I,{ref:o,className:n(y(),e),...a}));Re.displayName=I.displayName;const q=l.forwardRef(({className:e,...a},o)=>t.jsx($,{ref:o,className:n(y({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));q.displayName=$.displayName;function Te(e){const{title:a,desc:o,children:s,className:r,confirmText:i,cancelBtnText:p,destructive:m,isLoading:g,disabled:c=!1,handleConfirm:u,...V}=e;return t.jsx(Se,{...V,children:t.jsxs(B,{className:n(r&&r),children:[t.jsxs(G,{className:"text-left",children:[t.jsx(W,{children:a}),t.jsx(Y,{asChild:!0,children:t.jsx("div",{children:o})})]}),s,t.jsxs(H,{children:[t.jsx(q,{disabled:g,children:p??"Cancel"}),t.jsx(de,{variant:m?"destructive":"default",onClick:u,disabled:c||g,children:i??"Continue"})]})]})})}export{Te as C,be as I,Me as S,we as u};
